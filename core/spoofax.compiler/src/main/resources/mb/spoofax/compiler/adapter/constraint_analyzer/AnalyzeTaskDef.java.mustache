package {{genAnalyzeTaskDef.packageId}};

import mb.constraint.common.ConstraintAnalyzer.SingleFileResult;
import mb.constraint.common.ConstraintAnalyzerContext;
import mb.constraint.common.ConstraintAnalyzerException;
import mb.constraint.pie.ConstraintAnalyzeTaskDef;
import mb.resource.ResourceKey;
import org.spoofax.interpreter.terms.IStrategoTerm;

import javax.inject.Inject;

@{{adapterProject.scope.qualifiedId}}
public class {{genAnalyzeTaskDef.id}} extends ConstraintAnalyzeTaskDef {
    private final {{languageProjectInput.constraintAnalyzer.qualifiedId}} constraintAnalyzer;

    @Inject
    public {{genAnalyzeTaskDef.id}}({{languageProjectInput.constraintAnalyzer.qualifiedId}} constraintAnalyzer) {
        this.constraintAnalyzer = constraintAnalyzer;
    }

    @Override
    public String getId() {
        return "{{genAnalyzeTaskDef.qualifiedId}}";
    }

    @Override
    protected SingleFileResult analyze(ResourceKey resource, IStrategoTerm ast, ConstraintAnalyzerContext context) throws ConstraintAnalyzerException {
        return constraintAnalyzer.analyze(resource, ast, context);
    }
}
