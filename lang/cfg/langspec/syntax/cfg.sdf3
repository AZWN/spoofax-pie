module cfg

imports
  
  lex/layout
  lex/comment
  
  literal

context-free start-symbols
  
  Start

context-free syntax
  
  Start.Sections = <<{Section "\n"}*>>

context-free syntax // Workspace config

  Section.WorkspaceSec =
<workspace {
  <{WorkspaceOpt "\n"}*>
}>
  WorkspaceOpt.LangSpec = <langspec <Path>>
  WorkspaceOpt.SpxLang = <spxlang <Path>>
  WorkspaceOpt.SpxLangSpec = <spxlangspec <Path>>

context-free syntax // Language specification config

  Section.LangSpecSec =
<langspec {
  <{LangSpecSubSec "\n"}*>
}>

context-free syntax // Identification

  LangSpecSubSec.IdentificationSec =
<identification {
  <{IdentificationOpt "\n"}*>
}>  
  IdentificationOpt.FileExtensions = <file extensions: <Exts>>

context-free syntax // Information

  LangSpecSubSec.InformationSec =
<information {
  <{InformationOpt "\n"}*>
}>
  InformationOpt.Name = <name: <String>>

context-free syntax // Syntax

  LangSpecSubSec.SyntaxSec =
<syntax {
  <{SyntaxSubSec "\n"}*>
}>

  SyntaxSubSec.SyntaxParseSubSec =
<parse {
  <{SyntaxParseOpt "\n"}*>
}> 
  SyntaxParseOpt.SyntaxParseFiles = <files: <Paths>>
  SyntaxParseOpt.SyntaxParseMainFile = <main file: <Path>>
  SyntaxParseOpt.SyntaxParseStartSymbolId = <start symbol id: <Id>>

  SyntaxSubSec.SyntaxSignatureSubSec =
<signature {
  <{SyntaxSignatureOpt "\n"}*>
}> 
  SyntaxSignatureOpt.SignatureSyntaxFiles = <files: <Paths>>

  SyntaxSubSec.SyntaxStyleSubSec =
<style {
  <{SyntaxStyleOpt "\n"}*>
}> 
  SyntaxStyleOpt.SyntaxStyleFile = <file: <Path>>

context-free syntax // Names and Types

  LangSpecSubSec.NaTsSec = 
<names and types {
  <{NaTsOpt "\n"}*>
}>

  NaTsOpt.NaTsNaBL2Files = <nabl2 files: <Paths>>
  NaTsOpt.NaTsStrategoConfig = <stratego config: <StrategoConfig>>
  NaTsOpt.NaTsStrategoStrategyId = <stratego strategy id: <Id>>
  NaTsOpt.NaTsRootScopePerFile = <root scope per file: <Bool>>

context-free syntax // Stratego config object

  StrategoConfig.StrategoConfig =
<{
  <{StrategoConfigOpt "\n"}*>
}>
  StrategoConfigOpt.StrategoConfigMainFile = <main file: <Path>>
  StrategoConfigOpt.StrategoConfigIncludeDirs = <include dirs: <Paths>>
  StrategoConfigOpt.StrategoConfigIncludeFiles = <include files: <Paths>>
  StrategoConfigOpt.StrategoConfigIncludeLibs = <include libs: <Ids>>
  StrategoConfigOpt.StrategoConfigBaseDir = <base dir: <Path>>
  StrategoConfigOpt.StrategoConfigCacheDir = <cache dir: <Path>>
  StrategoConfigOpt.StrategoConfigOutputFile = <output file: <Path>>
  