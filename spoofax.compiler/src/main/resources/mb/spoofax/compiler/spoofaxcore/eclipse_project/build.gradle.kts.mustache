{{#standaloneProject}}
plugins {
  id("org.metaborg.gradle.config.sub-project") version "{{shared.metaborgGradleConfigVersion}}"
  id("org.metaborg.gradle.config.java-library") version "{{shared.metaborgGradleConfigVersion}}"
  id("org.metaborg.coronium.bundle") version "{{shared.metaborgCoroniumVersion}}"
}

repositories {
{{#repositoryCodes}}
  {{this}}
{{/repositoryCodes}}
}
{{/standaloneProject}}
{{^standaloneProject}}
plugins {
  id("org.metaborg.gradle.config.java-library")
  id("org.metaborg.coronium.bundle")
}
{{/standaloneProject}}

sourceSets {
  main {
    java {
      srcDir("$buildDir/generated/sources/spoofax/java")
    }
  }
}

bundle {
{{#bundleDependencyCodes}}
  {{this}}
{{/bundleDependencyCodes}}

  // HACK: explicitly add these (normally transitive) dependencies for testing purposes, because we do not have access to transitive dependencies in tests.
  requireTargetPlatform("javax.inject")
  requireTargetPlatform("org.eclipse.core.runtime")
  requireTargetPlatform("org.eclipse.core.expressions")
  requireTargetPlatform("org.eclipse.core.resources")
  requireTargetPlatform("org.eclipse.core.filesystem")
  requireTargetPlatform("org.eclipse.ui")
  requireTargetPlatform("org.eclipse.ui.views")
  requireTargetPlatform("org.eclipse.ui.editors")
  requireTargetPlatform("org.eclipse.ui.console")
  requireTargetPlatform("org.eclipse.ui.workbench")
  requireTargetPlatform("org.eclipse.ui.workbench.texteditor")
  requireTargetPlatform("org.eclipse.ui.ide")
  requireTargetPlatform("org.eclipse.jface.text")
  requireTargetPlatform("org.eclipse.swt")
  requireTargetPlatform("com.ibm.icu")
}

dependencies {
{{#dependencyCodes}}
  {{this}}
{{/dependencyCodes}}
}
